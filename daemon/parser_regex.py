#preg = re.compile(expression, re.IGNORECASE | re.MULTILINE)

def re_compiler(preg):
    return re.compile(preg, re.IGNORECASE | re.MULTILINE)

log_file_started = re_compiler(r'L (\S+) - (\S+) Log file started \x28file "(.*?)"\x29')
log_timestamp = re_compiler(r'L (\S+) - (\S+):')
game_restart = re_compiler(r'"LIVELOG_GAME_RESTART"')
damage_dealt = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "damage" \x28damage "(\d+)"\x29')
damage_taken = re.compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "damage_taken" \x28damage "(\d+)"\x29')
player_damage = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "damage" against "(.*)<(\d+)><(.*)><(Red|Blue)>" \x28damage "(\d+)"\x29')
healing_done = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "healed" against "(.*)<(\d+)><(.*)><(Red|Blue)>" \x28healing "(\d+)"\x29')
item_pickup = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" picked up item "(.*)"')
player_kill = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" killed "(.*)<(\d+)><(.*)><(Red|Blue)>" with "(.*)" \x28attacker_position "(.*)"\x29 \x28victim_position "(.*)"\x29')
player_kill_special = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" killed "(.*)<(\d+)><(.*)><(Red|Blue)>" with "(.*)" \x28customkill "(.*)"\x29 \x28attacker_position "(.*)"\x29 \x28victim_position "(.*)"\x29')
player_assist = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "kill assist" against "(.*)<(\d+)><(.*)><(Red|Blue)>" \x28assister_position "(.*)"\x29 \x28attacker_position "(.*)"\x29 \x28victim_position "(.*)"\x29')
medic_death = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "medic_death" against "(.*)<(\d+)><(.*)><(Red|Blue)>" \x28healing "(.*)"\x29 \x28ubercharge "(.*)"\x29')
uber_used = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "chargedeployed"')
player_dominated = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "domination" against "(.*)<(\d+)><(.*)><(Red|Blue)>"')
player_revenge = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "revenge" against "(.*)<(\d+)><(.*)><(Red|Blue)>"')
player_death_custom = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" committed suicide with "(.*)" \x28customkill "(.*?)"\x29')
player_death = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" committed suicide with "(.*)"')
building_destroyed = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "killedobject" \x28object "(.*)"\x29 \x28weapon "(.*)"\x29 \x28objectowner "(.*)<(\d+)><(.*)><(Blue|Red)>"\x29 \x28attacker_position "(.*)"\x29')
chat_message = re_compiler(r'"(.+)<(\d+)><(.+)><(Red|Blue|Spectator|Console)>" (say|say_team) "(.+)"')
point_capture = re_compiler(r'Team "(Blue|Red)" triggered "pointcaptured" \x28cp "(\d+)"\x29 \x28cpname "(.*)"\x29 \x28numcappers "(\d+)"')
capture_blocked = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" triggered "captureblocked" \x28cp "(\d+)"\x29 \x28cpname "#?(.*)"\x29 \x28position "(.*)"\x29')
team_score = re_compiler(r'Team "(Blue|Red)" current score "(\d+)" with "(\d+)" players')
final_team_score = re_compiler(r'Team "(Blue|Red)" final score "(\d+)" with "(\d+)" players')
game_over = re_compiler(r'World triggered "Game_Over" reason "(.*)"')
rcon_command = re_compiler(r'rcon from "(.*?)": command "(.*)"')
player_disconnect = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" disconnected \x28reason "(.*)"\x29)')
player_connect = re_compiler(r'"(.*)<(\d+)><(.*)><>" connected, address "(.*?):(.*)"')
player_validated = re_compiler(r'"(.*)<(\d+)><(.*)><>" STEAM USERID validated')
player_class_change = re_compiler(r'"(.*)<(\d+)><(.*)><(Red|Blue)>" changed role to "(.*)"')
round_win = re_compiler(r'World triggered "Round_Win" \x28winner "(Blue|Red)"\x29')
round_overtime = re_compiler(r'World triggered "Round_Overtime"')
round_length = re_compiler(r'World triggered "Round_Length" \x28seconds "(\d+\.\d+)\x29')
round_start = re_compiler(r'World triggered "Round_Start"')
round_setup_end = re_compiler(r'World triggered "Round_Setup_End"')
mini_round_win = re_compiler(r'World triggered "Mini_Round_Win" \x28winner "(Blue|Red)"\x29 \x28round "round_(\d+)"\x29')
mini_round_length = re_compiler(r'World triggered "Mini_Round_Length" \x28seconds "(\d+.\d+)"\x29')